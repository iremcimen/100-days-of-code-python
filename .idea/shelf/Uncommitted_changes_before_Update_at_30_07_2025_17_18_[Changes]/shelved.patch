Index: Day 9/Blind Auction Project/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Day 9/Blind Auction Project/main.py b/Day 9/Blind Auction Project/main.py
new file mode 100644
--- /dev/null	(date 1753884859734)
+++ b/Day 9/Blind Auction Project/main.py	(date 1753884859734)
@@ -0,0 +1,29 @@
+from art import logo
+
+print(logo)
+
+
+def find_highest_bidder(bidding_record):
+    highest_bid = 0
+    winner = ""
+    for bidder in bidding_record:
+        bid_amount = bidding_record[bidder]
+        if bid_amount > highest_bid:
+            highest_bid = bid_amount
+            winner = bidder
+
+    print(f"The winner is {winner} with a bid of ${highest_bid}")
+
+
+bids = {}
+continue_bidding = True
+while continue_bidding:
+    name = input("What is your name?: ")
+    price = int(input("What is your bid?: $"))
+    bids[name] = price
+    should_continue = input("Are there any other bidders? Type 'yes or 'no'.\n").lower()
+    if should_continue == "no":
+        continue_bidding = False
+        find_highest_bidder(bids)
+    elif should_continue == "yes":
+        print("\n" * 20)
\ No newline at end of file
Index: Day 9/Blind Auction Project/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Day 9/Blind Auction Project/README.md b/Day 9/Blind Auction Project/README.md
new file mode 100644
--- /dev/null	(date 1753885087329)
+++ b/Day 9/Blind Auction Project/README.md	(date 1753885087329)
@@ -0,0 +1,31 @@
+Day 9 - Blind Auction Project
+
+This project focuses on applying Python fundamentals in a practical scenario by creating a blind auction program. It covers:
+
+- Taking user input with input()
+
+- Using dictionaries to store data ({name: bid})
+
+- Controlling program flow with loops and conditionals
+
+- Finding the maximum value in a dictionary
+
+- Defining and using functions
+
+- Basic console output formatting
+
+What I Learned
+
+- How to collect multiple user inputs dynamically
+
+- How to store and manipulate data in dictionaries
+
+- How to use loops to repeat actions until a condition is met
+
+- How to find the highest bid using iteration or the max() function
+
+- How to organize code with functions for clarity and reusability
+
+Files
+
+- main.py: Contains the full blind auction implementation with input handling and winner determination.
\ No newline at end of file
Index: Day 9/Blind Auction Project/art.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Day 9/Blind Auction Project/art.py b/Day 9/Blind Auction Project/art.py
new file mode 100644
--- /dev/null	(date 1750543189536)
+++ b/Day 9/Blind Auction Project/art.py	(date 1750543189536)
@@ -0,0 +1,13 @@
+logo = r'''
+                         ___________
+                         \         /
+                          )_______(
+                          |"""""""|_.-._,.---------.,_.-._
+                          |       | | |               | | ''-.
+                          |       |_| |_             _| |_..-'
+                          |_______| '-' `'---------'` '-'
+                          )"""""""(
+                         /_________\\
+                       .-------------.
+                      /_______________\\
+'''
\ No newline at end of file
